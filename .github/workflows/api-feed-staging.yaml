name: Feed API Build and Deploy Staging

on:
  push:
    branches: [develop]
    paths:
      - "api/**"
      - ".github/workflows/api-feed-staging.yaml"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Build specific env vars
      CONFIG_ID: staging
      CONFIG_FIXER_API_KEY: ${{ secrets.STAGING_CONFIG_FIXER_API_KEY }}
      CONFIG_DB_AWS_REGION: ${{ secrets.STAGING_CONFIG_DB_AWS_REGION }}
      CONFIG_DB_AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_CONFIG_DB_AWS_ACCESS_KEY_ID }}
      CONFIG_DB_AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_CONFIG_DB_AWS_SECRET_ACCESS_KEY }}
      CONFIG_DB_TABLE_PREFIX: ${{ secrets.STAGING_CONFIG_DB_TABLE_PREFIX }}
      CONFIG_ALLOWED_DOMAIN: ${{ secrets.STAGING_CONFIG_ALLOWED_DOMAIN }}
      CONFIG_ROUTE_CORS: ${{ secrets.STAGING_CONFIG_ROUTE_CORS }}
      CONFIG_VERBOSE_LOGGING: ${{ secrets.STAGING_VERBOSE_LOGGING }}
      CONFIG_PRIVATE_KEY_ED25519: ${{ secrets.STAGING_PRIVATE_KEY_ED25519 }}
      GCP_SERVICE_ID: ${{ secrets.GCP_STAGING_FEED_SERVICE_ID }}
      GCP_PROD_SERVICE_ID: ${{ secrets.GCP_PROD_SERVICE_ID }}
      GCP_PROD_DOMAIN: ${{ secrets.GCP_PROD_DOMAIN }}
      GCP_STAGING_SERVICE_ID: ${{ secrets.GCP_STAGING_SERVICE_ID }}
      GCP_STAGING_DOMAIN: ${{ secrets.GCP_STAGING_DOMAIN }}
      GCP_PROD_FEED_SERVICE_ID: ${{ secrets.GCP_PROD_FEED_SERVICE_ID }}
      GCP_PROD_FEED_DOMAIN: ${{ secrets.GCP_PROD_FEED_DOMAIN }}
      GCP_STAGING_FEED_SERVICE_ID: ${{ secrets.GCP_STAGING_FEED_SERVICE_ID }}
      GCP_STAGING_FEED_DOMAIN: ${{ secrets.GCP_STAGING_FEED_DOMAIN }}
      GCP_BOT_PROD_SERVICE_ID: ${{ secrets.GCP_BOT_PROD_SERVICE_ID }}
      GCP_BOT_PROD_DOMAIN: ${{ secrets.GCP_BOT_PROD_DOMAIN }}

    steps:
      - uses: actions/checkout@v2
      - name: API Config
        run: |
          cd api/src/data/
          mv config.template config.$CONFIG_ID.json
          sed -i 's/FIXER-API-KEY/${{ env.CONFIG_FIXER_API_KEY }}/g' config.$CONFIG_ID.json
          sed -i 's/DB-AWS-REGION/${{ env.CONFIG_DB_AWS_REGION }}/g' config.$CONFIG_ID.json
          sed -i 's/DB-AWS-ACCESS-KEY-ID/${{ env.CONFIG_DB_AWS_ACCESS_KEY_ID }}/g' config.$CONFIG_ID.json
          sed -i 's/DB-AWS-SECRET-ACCESS-KEY/${{ env.CONFIG_DB_AWS_SECRET_ACCESS_KEY }}/g' config.$CONFIG_ID.json
          sed -i 's/DB-TABLE-PREFIX/${{ env.CONFIG_DB_TABLE_PREFIX }}/g' config.$CONFIG_ID.json
          sed -i 's/ALLOWED-DOMAIN/${{ env.CONFIG_ALLOWED_DOMAIN }}/g' config.$CONFIG_ID.json
          sed -i 's/ROUTE-CORS/${{ env.CONFIG_ROUTE_CORS }}/g' config.$CONFIG_ID.json
          sed -i 's/VERBOSE-LOGGING/${{ env.CONFIG_VERBOSE_LOGGING }}/g' config.$CONFIG_ID.json
          sed -i 's/PRIVATE-KEY-ED25519/${{ env.CONFIG_PRIVATE_KEY_ED25519 }}/g' config.$CONFIG_ID.json
      - name: GCP Config
        run: |
          cd api
          mv app.template.staging.yaml app.yaml
          sed -i 's/%SERVICE-ID%/${{ env.GCP_SERVICE_ID }}/g' app.yaml
          sed -i 's/%CONFIG-ID%/${{ env.CONFIG_ID }}/g' app.yaml
          mv dispatch.template.yaml dispatch.yaml
          sed -i 's/%GCP-PROD-DOMAIN%/${{ env.GCP_PROD_DOMAIN }}/g' dispatch.yaml
          sed -i 's/%GCP-PROD-SERVICE-ID%/${{ env.GCP_PROD_SERVICE_ID }}/g' dispatch.yaml
          sed -i 's/%GCP-STAGING-DOMAIN%/${{ env.GCP_STAGING_DOMAIN }}/g' dispatch.yaml
          sed -i 's/%GCP-STAGING-SERVICE-ID%/${{ env.GCP_STAGING_SERVICE_ID }}/g' dispatch.yaml
          sed -i 's/%GCP-PROD-FEED-DOMAIN%/${{ env.GCP_PROD_FEED_DOMAIN }}/g' dispatch.yaml
          sed -i 's/%GCP-PROD-FEED-SERVICE-ID%/${{ env.GCP_PROD_FEED_SERVICE_ID }}/g' dispatch.yaml
          sed -i 's/%GCP-STAGING-FEED-DOMAIN%/${{ env.GCP_STAGING_FEED_DOMAIN }}/g' dispatch.yaml
          sed -i 's/%GCP-STAGING-FEED-SERVICE-ID%/${{ env.GCP_STAGING_FEED_SERVICE_ID }}/g' dispatch.yaml
          sed -i 's/%GCP-BOT-PROD-DOMAIN%/${{ env.GCP_BOT_PROD_DOMAIN }}/g' dispatch.yaml
          sed -i 's/%GCP-BOT-PROD-SERVICE-ID%/${{ env.GCP_BOT_PROD_SERVICE_ID }}/g' dispatch.yaml
      - uses: google-github-actions/setup-gcloud@596a625120b91c996fbb7e49f6110e31d0a182d0
        with:
          version: latest
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Deploy
        run: |
          cd api
          gcloud app deploy app.yaml dispatch.yaml --quiet
